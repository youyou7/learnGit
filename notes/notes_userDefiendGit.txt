自定义Git

一、忽略特殊文件
	在Git工作区的根目录下创建一个特殊的.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。
	不需要从头写.gitignore文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：https://github.com/github/gitignore

	--------------------------------------------------------------------
	注：.gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理

1 忽略文件的原则是：
	① 忽略操作系统自动生成的文件，比如缩略图等；
	② 忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；
	③ 忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。

2 被.gitignore文件忽略的文件想添加到Git		git add -f <filename>

3 发现.gitignore有问题，需找出到底哪个规则写错了	git check-ignore -v <filename>


二、配置别名

1 配置别名
	git config --global alias.st status（表示status的别名为st，即git status可写为git st）
--------------------------------------------------------------------------------------
	注：--global参数是全局参数，也就是这些命令在这台电脑的所有Git仓库下都有用.配置Git的时候，加上--global是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。配置文件放在.git/config中

2 删除别名
	在配置文件中直接删除

3 当前用户的Git配置文件放在用户主目录下的一个隐藏文件.gitconfig中，配置别名也可以直接修改这个文件，如果改错了，可以删掉文件重新通过命令配置。


三、搭建Git服务器（Linux）

1 安装git		sudo apt-get install git

2 创建git用户		sudo adduser git

3 创建证书登录		
	人数少：将所有需要登录的用户的公钥导入到/home/git/.ssh/authorized_keys文件中，一行一个
	人数多：用Gitosis管理公钥

4 初始化Git仓库
	① 选定一个目录作为Git仓库,并在目录下执行该命令	sudo git init --bare learngit.git
	② 把owner改为git	

5 禁用shell登录
	找到/etc/passwd文件，并找到一行:
		git:x:1001:1001:,,,:/home/git:/bin/bash
	改为：
		git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell
	这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出

6 克隆远程仓库		git clone git@<serverhost>:<repopath>


注：Git是为Linux源代码托管而开发的，所以Git也继承了开源社区的精神，不支持权限控制。不过，因为Git支持钩子（hook），所以，可以在服务器端编写一系列脚本来控制提交等操作，达到权限控制的目的。Gitolite就是这个工具。即要像SVN那样变态地控制权限，用Gitolite。